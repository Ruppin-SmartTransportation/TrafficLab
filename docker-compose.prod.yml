services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    expose:
      - "80"
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    labels:
      - traefik.enable=true
      - traefik.docker.network=rev_proxy_traefik
      # route
      - traefik.http.routers.frontend.rule=Host(`demo.smart-transport.cloud`)
      - traefik.http.routers.frontend.entrypoints=websecure
      - traefik.http.routers.frontend.tls.certresolver=le
      # service port
      - traefik.http.services.frontend.loadbalancer.server.port=80
    networks: [ traefik ]

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    expose:
      - "8000"
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/trafficlab
      - NODE_ENV=production
    depends_on:
      - db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - traefik.enable=true
      - traefik.docker.network=rev_proxy_traefik
      # route
      - traefik.http.routers.backend.rule=Host(`api.smart-transport.cloud`)
      - traefik.http.routers.backend.entrypoints=websecure
      - traefik.http.routers.backend.tls.certresolver=le
      # service port
      - traefik.http.services.backend.loadbalancer.server.port=8000
      # CORS (adjust origins as needed)
      - traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist=https://demo.smart-transport.cloud
      - traefik.http.middlewares.cors.headers.accesscontrolallowmethods=GET,POST,PUT,DELETE,OPTIONS
      - traefik.http.middlewares.cors.headers.accesscontrolallowheaders=*
      - traefik.http.middlewares.cors.headers.accesscontrolallowcredentials=true
      - traefik.http.routers.backend.middlewares=cors
    networks: [ traefik, internal ]

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=trafficlab
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - "5432"
    networks: [ internal ]

volumes:
  postgres_data:

networks:
  traefik:
    external: true
    name: rev_proxy_traefik
  internal:
    name: internal
    driver: bridge
